// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(cuid())
  name      String    @default("")
  email     String    @unique @default("")
  password  String
  posts     Post[]    @relation("Post_author")
  createdAt DateTime? @default(now())
  products  Product[] @relation("Product_author")
}

model Post {
  id       String  @id @default(cuid())
  title    String  @default("")
  content  String  @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  author   User?   @relation("Post_author", fields: [authorId], references: [id])
  authorId String? @map("author")
  tags     Tag[]   @relation("Post_tags")

  @@index([authorId])
}

model Tag {
  id       String    @id @default(cuid())
  name     String    @default("")
  posts    Post[]    @relation("Post_tags")
  products Product[] @relation("Product_tags")
}

model Product {
  id               String  @id @default(cuid())
  title            String  @default("")
  image            Image?  @relation("Image_product")
  content          String  @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  shortDescription String  @default("")
  author           User?   @relation("Product_author", fields: [authorId], references: [id])
  authorId         String? @map("author")
  tags             Tag[]   @relation("Product_tags")
  price            Int

  @@index([authorId])
}

model Image {
  id              String   @id @default(cuid())
  image_filesize  Int?
  image_extension String?
  image_width     Int?
  image_height    Int?
  image_id        String?
  altText         String   @default("")
  product         Product? @relation("Image_product", fields: [productId], references: [id])
  productId       String?  @unique @map("product")
}
